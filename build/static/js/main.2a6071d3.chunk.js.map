{"version":3,"sources":["components/Book.js","components/Books.js","components/BookInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Book","book","history","useHistory","className","onClick","push","id","style","backgroundColor","color","title","author","Books","useState","books","setBooks","useEffect","a","fetch","response","json","data","map","index","BookInfo","useParams","setBook","console","log","href","plot","audience","year","pages","publisher","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAoBeA,MAjBf,YAAyB,IAATC,EAAQ,EAARA,KACNC,EAAUC,cAEhB,OACI,0BAASC,UAAU,OAAOC,QAAS,kBAAMH,EAAQI,KAAR,gBAAsBL,EAAKM,MAAQC,MAAO,CAAEC,gBAAkBR,EAAKS,OAA5G,UACI,yBAASN,UAAU,OACnB,0BAASA,UAAU,UAAnB,UACI,0BACA,0BAASA,UAAU,QAAnB,UACI,6BAAMH,EAAKU,QACX,6BAAMV,EAAKW,mBCchBC,MAtBf,WAAkB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KASb,OANAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACiBC,MAAM,+BADvB,cACAC,EADA,gBAEaA,EAASC,OAFtB,OAEAC,EAFA,OAGNN,EAASM,GAHH,2CAIP,IAGC,yBAASlB,UAAU,UAAnB,SACI,qBAAKA,UAAU,UAAf,SACI,sBAAMA,UAAU,QAAhB,SACMW,EAAMQ,KAAI,SAACtB,EAAMuB,GACf,OAAO,cAAC,EAAD,CAAMvB,KAAOA,GAAauB,a,MC0C1CC,MAhDf,WAAoB,IAERlB,EAAOmB,cAAPnB,GACFL,EAAUC,cAHA,EAISW,mBAAS,IAJlB,mBAITb,EAJS,KAIF0B,EAJE,KAchB,OATAC,QAAQC,IAAI,cAAetB,GAE3BU,oBAAS,sBAAC,8BAAAC,EAAA,sEACiBC,MAAM,+BAAD,OAAgCZ,IADtD,cACAa,EADA,gBAEaA,EAASC,OAFtB,OAEAC,EAFA,OAINK,EAAQL,GAJF,2CAKP,IAGC,sBAAMlB,UAAU,kBAAhB,SACI,sBAAKA,UAAU,YAAf,UACI,iCACI,mBAAG0B,KAAK,IAAI1B,UAAU,OAAOC,QAAU,kBAAMH,EAAQI,KAAK,MAA1D,sBAEJ,yBAASF,UAAU,UAAnB,SACI,0BAASA,UAAU,OAAOI,MAAO,CAAEC,gBAAiBR,EAAKS,OAAzD,UACI,yBAASN,UAAU,OACnB,0BAASA,UAAU,UAAnB,UACI,0BACA,0BAASA,UAAU,QAAnB,UACI,6BAAMH,EAAKU,QACX,6BAAMV,EAAKW,oBAK3B,0BAASR,UAAU,OAAnB,UACI,6BAAMH,EAAKU,QACX,6BAAMV,EAAKW,SACX,4BAAKX,EAAK8B,OACV,mCACI,8BAAG,0CAAH,IAAsB9B,EAAK+B,YAC3B,8BAAG,iDAAH,IAA6B/B,EAAKgC,QAClC,8BAAG,uCAAH,IAAmBhC,EAAKiC,OAAS,OACjC,8BAAG,2CAAH,IAAuBjC,EAAKkC,yBCfrCC,MAZf,WAEE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAYzB,EAAQ0B,OAAK,IAGzC,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAYb,QCrB3Be,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2a6071d3.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction Book({ book }) {\n    const history = useHistory();\n\n    return (\n        <article className=\"book\" onClick={() => history.push(`/info/${book.id}`) } style={{ backgroundColor : book.color }}>\n            <section className=\"bg\"></section>\n            <section className=\"content\">\n                <aside></aside>\n                <section className=\"about\">\n                    <h2>{ book.title }</h2>\n                    <h3>{ book.author }</h3>\n                </section>\n            </section>\n        </article>\n    )\n}\n\nexport default Book;","import React, { useState, useEffect } from 'react';\nimport '../App.css';\n\nimport Book from './Book';\n\nfunction Books() {\n    const [books, setBooks] = useState([]);\n\n    useEffect(async () => {\n        const response = await fetch('http://localhost:7000/books');\n        const data = await response.json();\n        setBooks(data);\n    }, [])\n\n    return (\n        <section className=\"library\">\n            <div className=\"wrapper\">\n                <main className=\"books\">\n                    { books.map((book, index) => {\n                        return <Book book={ book } key={ index } />\n                    })}\n                </main>\n            </div>\n        </section>\n    )\n}\n\nexport default Books;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport books from '../assets/childrensbooks.json';\nimport { useHistory } from 'react-router-dom';\n\n/**\n * 1. Hämta id från url:en exempelvis localhost:3000/info/1 \n * 2. Läs in childrensbooks.json\n * 3. Filtera ut den bok som motsvarar det ID som finns i url:en\n * 4. Visa detaljerad info om bok\n */\n\n\nfunction BookInfo() {\n    //Hämtar ut vad som finns i url:en efter /info det som i App.js är :id\n    const { id } = useParams();\n    const history = useHistory();\n    const [book , setBook] = useState({});\n    console.log('useParams: ', id);\n\n    useEffect(async () => {\n        const response = await fetch(`http://localhost:7000/books/${id}`);\n        const data = await response.json();\n        \n        setBook(data);\n    }, [])\n\n    return (\n        <main className=\"background-dark\">\n            <div className=\"book-info\">\n                <header>\n                    <a href=\"#\" className=\"back\" onClick={ () => history.push('/') }>&#8592;</a>\n                </header>\n                <section className=\"display\">\n                    <article className=\"book\" style={{ backgroundColor: book.color }}>\n                        <section className=\"bg\"></section>\n                        <section className=\"content\">\n                            <aside></aside>\n                            <section className=\"about\">\n                                <h2>{ book.title }</h2>\n                                <h3>{ book.author }</h3>\n                            </section>\n                        </section>\n                    </article>\n                </section>\n                <section className=\"info\">\n                    <h1>{ book.title }</h1>\n                    <h3>{ book.author }</h3>\n                    <p>{ book.plot }</p>\n                    <footer>\n                        <p><b>Audience:</b> { book.audience }</p>\n                        <p><b>First Published:</b> { book.year }</p>\n                        <p><b>Pages:</b> { book.pages || '-' }</p>\n                        <p><b>Publisher:</b> { book.publisher }</p>\n                    </footer>\n                </section>\n            </div>\n        </main>\n    )\n}\n\nexport default BookInfo;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Books from './components/Books';\nimport BookInfo from './components/BookInfo';\n\n/**\n * Ny arkitektur med React Router\n * App.js - Router med Switch som håller koll på våra routes\n * Books.js - Route med path=\"/\". Loopar ut alla böcker från childrensbooks.json\n * Book.js - Visar en upp bok som loopas ut från Books.js\n * BookInfo.js - Route med path=\"/info\". Visar detaljerad information om vald bok\n */\n\n/**\n * Problem att lösa\n * Hur får vi den valda boken från Book.js till BookInfo.js\n * Hur triggar vi en byta av route från en funktion?\n */\n\n/**\n * 1. Importera BookInfo.js i App.js\n * 2. Skapa en route för BookInfo med path /info\n * 3. När jag klickar på en bok i Book.js så ska jag förflyttas till url:en localhost:3000/info\n */\n\nfunction App() {\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={ Books } exact />\n      {/* :id är en dynamisk parameter där man kan skicka det man önskar exempelvis en siffra \n      så url:en blir då /info/1 */} \n      <Route path=\"/info/:id\" component={ BookInfo } />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}